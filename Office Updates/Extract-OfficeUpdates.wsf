<job id="Exract-OfficeUpdates">
<script language="VBScript" src="..\..\scripts\ZTIUtility.vbs"/>
<script language="VBScript">

'//----------------------------------------------------------------------------
'// Purpose: Used to extract Office Updates
'// Usage: cscript Extract-OfficeUpdates.wsf [/debug:true]
'// Version: 1.0 - 2017/10/14 - Jacob Thornberry
'//
'//
'//----------------------------------------------------------------------------

'//----------------------------------------------------------------------------
'// Global constant and variable declarations
'//---------------------------------------------------------------------------- 

Option Explicit 
Dim iRetVal
Dim oMsi,oFso,oWShell
Dim Patches,SumInfo
Dim patch,record,msp
Dim qView
Dim sTargetFolder,sMessage

Const OFFICEID = "000-0000000FF1CE}"
Const PRODUCTCODE_EMPTY = ""
Const MACHINESID = ""
Const MSIINSTALLCONTEXT_MACHINE = 4
Const MSIPATCHSTATE_APPLIED = 1
Const MSIOPENDATABASEMODE_PATCHFILE = 32
Const PID_SUBJECT = 3 'Displayname
Const PID_TEMPLATES = 7 'PatchTargets

'//----------------------------------------------------------------------------
'// End declarations
'//---------------------------------------------------------------------------- 

'//----------------------------------------------------------------------------
'// Main routine
'//---------------------------------------------------------------------------- 

On Error Resume Next
iRetVal = ZTIProcess
ProcessResults iRetVal
On Error Goto 0 

'//---------------------------------------------------------------------------
'//
'// Function: ZTIProcess()
'//
'// Input: None
'// 
'// Return: Success - 0
'// Failure - non-zero
'//
'// Purpose: Perform main ZTI processing
'// 
'//---------------------------------------------------------------------------

Function ZTIProcess() 

    oLogging.CreateEntry oUtility.ScriptName & ": Initializing Office update extraction", LogTypeInfo
    oLogging.CreateEntry oUtility.ScriptName & ": Creating WindowsInstaller object", LogTypeInfo
	Set oMsi = CreateObject("WindowsInstaller.Installer")
    oLogging.CreateEntry oUtility.ScriptName & ": Creating Scripting.FileSystem object", LogTypeInfo
    Set oFso = CreateObject("Scripting.FileSystemObject")
    oLogging.CreateEntry oUtility.ScriptName & ": Creating WScript Shell object", LogTypeInfo
    Set oWShell = CreateObject("Wscript.Shell")

    sTargetFolder = "\\SERVERNAME\PATH_TO_OFFICE_UPDATES\" & oEnvironment.Item("TaskSequenceID")

    oLogging.CreateEntry oUtility.ScriptName & ": Output folder set to " & sTargetFolder, LogTypeInfo
    If Not oFso.FolderExists(sTargetFolder) Then 
        oLogging.CreateEntry oUtility.ScriptName & ": Creating output folder as it does not already exist!", LogTypeInfo
        oFso.CreateFolder sTargetFolder
    End If

    Set Patches = oMsi.PatchesEx(PRODUCTCODE_EMPTY,MACHINESID,MSIINSTALLCONTEXT_MACHINE,MSIPATCHSTATE_APPLIED)

    On Error Resume Next
    oLogging.CreateEntry oUtility.ScriptName & ": Begin scanning for Office updates", LogTypeInfo
    For Each patch in Patches
    If Not Err = 0 Then Err.Clear
        Set msp = oMsi.OpenDatabase(patch.PatchProperty("LocalPackage"),MSIOPENDATABASEMODE_PATCHFILE)
        Set SumInfo = msp.SummaryInformation
        If Err = 0 Then
            If InStr(SumInfo.Property(PID_TEMPLATES),OFFICEID)>0 Then
                Set qView = msp.OpenView("SELECT `Property`,`Value` FROM MsiPatchMetadata WHERE `Property`='StdPackageName'")
                qView.Execute : Set record = qView.Fetch()
                oFso.CopyFile patch.PatchProperty("LocalPackage"),sTargetFolder&"\"&record.StringData(2),TRUE
                oLogging.CreateEntry oUtility.ScriptName & ": Extracted Office Update " & record.StringData(2), LogTypeInfo
            End If
        End If
    Next
    
    oLogging.CreateEntry oUtility.ScriptName & ": Office update extraction is complete!", LogTypeInfo
	
End Function 

</script>
</job>